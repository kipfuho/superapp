server.port=8080
spring.application.name=booking-service

# PostgreSQL (change if needed)
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${POSTGRESQL_URL:jdbc:postgresql://localhost:5432/postgres}
spring.datasource.username=${POSTGRESQL_USERNAME:root}
spring.datasource.password=${POSTGRESQL_PASSWORD:secret}

# Hibernate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# Redis
spring.data.redis.repositories.enabled=false
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.cache.type=redis

# Eureka client
# eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka}
spring.cloud.discovery.enabled=false
eureka.client.enabled=false

# Kafka
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
app.topics.ticket-creation=ticket-creation

# Actuator
management.endpoints.web.exposure.include=health,info
management.endpoint.health.probes.enabled=true

# Swagger UI (openapi)
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html