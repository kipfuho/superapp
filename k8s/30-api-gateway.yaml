apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: demo
spec:
  replicas: 2
  selector:
    matchLabels: { app: api-gateway }
  template:
    metadata:
      labels: { app: api-gateway }
    spec:
      containers:
        - name: app
          image: api-gateway:local # change if using a remote registry
          imagePullPolicy: IfNotPresent
          ports: [{ containerPort: 8080 }]
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: k8s
            - name: REDIS_HOST
              value: redis.demo.svc.cluster.local
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef: { name: redis-secret, key: REDIS_PASSWORD }
          readinessProbe:
            httpGet: { path: /actuator/health, port: 8080 }
            initialDelaySeconds: 10
          livenessProbe:
            httpGet: { path: /actuator/health, port: 8080 }
            initialDelaySeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: demo
spec:
  selector: { app: api-gateway }
  ports:
    - port: 80
      targetPort: 8080
