apiVersion: v1
kind: Secret
metadata:
  name: keycloak-admin
  namespace: demo
type: Opaque
stringData:
  KEYCLOAK_ADMIN: admin
  KEYCLOAK_ADMIN_PASSWORD: admin

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-realm
  namespace: demo
data:
  demo-realm.json: |
    {
      "realm": "superapp",
      "enabled": true,
      "registrationAllowed": false,
      "resetPasswordAllowed": true,
      "internationalizationEnabled": false,
      "roles": {
        "realm": [
          { "name": "USER", "description": "Standard user role" },
          { "name": "ADMIN", "description": "Administrator role" }
        ]
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: demo
spec:
  replicas: 1
  selector:
    matchLabels: { app: keycloak }
  template:
    metadata:
      labels: { app: keycloak }
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:25.0
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: keycloak-admin
          args:
            - start-dev
            - --http-port=8080
            - --hostname-strict=false
            - --import-realm
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: realm
              mountPath: /opt/keycloak/data/import
      volumes:
        - name: realm
          configMap:
            name: keycloak-realm
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: demo
spec:
  selector: { app: keycloak }
  ports:
    - port: 80
      targetPort: 8080
