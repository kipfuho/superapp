# Server & app
server.port=8080
spring.application.name=api-gateway


# ===== Security: JWT (Resource Server) =====
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://YOUR-IDP/.well-known/jwks.json


# ===== Spring Cloud Gateway =====
# Default filters
spring.cloud.gateway.default-filters[0]=RemoveHopByHopHeaders=connection,keep-alive,transfer-encoding,te,trailer,proxy-authorization,proxy-authenticate,upgrade
spring.cloud.gateway.default-filters[1]=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin RETAIN_UNIQUE
spring.cloud.gateway.default-filters[2]=AddResponseHeader=X-Gateway, ${spring.application.name}


# Global CORS (tighten for prod)
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedMethods=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowCredentials=false


# HTTP client timeouts
spring.cloud.gateway.httpclient.connect-timeout=2000
spring.cloud.gateway.httpclient.response-timeout=5s


# ===== Routes =====
# User Service
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://user-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/users/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[0].filters[1].name=Retry
spring.cloud.gateway.routes[0].filters[1].args.retries=2
spring.cloud.gateway.routes[0].filters[1].args.statuses=BAD_GATEWAY,SERVICE_UNAVAILABLE,GATEWAY_TIMEOUT
spring.cloud.gateway.routes[0].filters[1].args.methods=GET


# Order Service
spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/orders/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1


# Actuator pass-through (no auth)
spring.cloud.gateway.routes[2].id=actuator-pass
spring.cloud.gateway.routes[2].uri=http://localhost:${server.port}
spring.cloud.gateway.routes[2].predicates[0]=Path=/actuator/health
spring.cloud.gateway.routes[2].predicates[1]=Path=/actuator/info


# ===== Eureka client =====
eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true


# ===== Actuator / metrics =====
management.endpoints.web.exposure.include=health,info,metrics,prometheus,gateway
management.endpoint.health.probes.enabled=true
management.endpoint.gateway.enabled=true
management.metrics.tags.application=${spring.application.name}